
/*Find Armstrong Number
Examples:
7 = 7^1
371 = 3^3 + 7^3 + 1^3 (27 + 343 +1)
8208 = 8^4 + 2^4 +0^4 + 8^4 (4096 + 16 + 0 + 4096).
1741725 = 1^7 + 7^7 + 4^7 + 1^7 + 7^7 + 2^7 +5^7 (1 + 823543 + 16384 + 1 + 823543 +128 + 78125)

C programming code*/
#include <stdio.h>

int power(int, int);

int main()
{
int n, sum = 0, temp, remainder, digits = 0;

printf("Input an integer\n");
scanf("%d", &n);

temp = n;
// Count number of digits
while (temp != 0) {
digits++;
temp = temp/10;
}

temp = n;

while (temp != 0) {
remainder = temp%10;
sum = sum + power(remainder, digits);
temp = temp/10;
}

if (n == sum)
printf("%d is an Armstrong number.\n", n);
else
printf("%d is not an Armstrong number.\n", n);

return 0;
}

int power(int n, int r) {
int c, p = 1;

for (c = 1; c <= r; c++) 
p = p*n;

return p; 
}